<Window x:Class="ProjectInformations.MainWindow"
        x:Name="MainProgramWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProjectInformations"
        xmlns:vm="clr-namespace:ProjectInformations.ViewModel"
        xmlns:converter="clr-namespace:ProjectInformations.Converters"
        mc:Ignorable="d"
        Title="Project configurator" MaxHeight="600" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <converter:StringToBoolConverter x:Key="stringToBoolConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0" BorderThickness="1" BorderBrush="Black" Margin="2">
            <DockPanel>
                <StackPanel DockPanel.Dock="Top">
                    <TextBlock Text="Available projects:" HorizontalAlignment="Center" Margin="5"/>
                    <ListView ItemsSource="{Binding Projects}" Margin="5" DisplayMemberPath="Name" SelectedItem="{Binding SelectedProject}" IsEnabled="{Binding EditProjectNameDisabled}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom">
                    <TextBlock Text="Project name:" Visibility="{Binding EditProjectNameVisible, Converter={StaticResource boolToVisibilityConverter}}" HorizontalAlignment="Center" Margin="5"/>
                    <TextBox Text="{Binding SelectedProject.Name}" Visibility="{Binding EditProjectNameVisible, Converter={StaticResource boolToVisibilityConverter}}" HorizontalAlignment="Center" MinWidth="50" Margin="5"/>
                    <Button Content="OK" Command="{Binding ProjectNameOkCommand}" Margin="5" Visibility="{Binding EditProjectNameVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <Button Content="Cancel" Command="{Binding ProjectNameCancelCommand}" Margin="5" Visibility="{Binding EditProjectNameVisible, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <Button Content="Add project" Command="{Binding AddProjectCommand}" Margin="5" IsEnabled="{Binding EditProjectNameDisabled}"/>
                    <Button Content="Delete project" Command="{Binding DeleteProjectCommand}" Margin="5" IsEnabled="{Binding EditProjectNameDisabled}"/>
                    <Button Content="Rename project" Command="{Binding RenameProjectCommand}" Margin="5" IsEnabled="{Binding EditProjectNameDisabled}"/>
                    <CheckBox IsChecked="{Binding ExportOnClose}" Content="Export after close" Margin="5"/>
                </StackPanel>
            </DockPanel>
        </Border>
        <DockPanel  Grid.Column="1">
            <Border DockPanel.Dock="Top">
                <Border BorderThickness="2"  Margin="2">
                    <StackPanel IsEnabled="{Binding EditProjectNameDisabled}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Robot type" VerticalAlignment="Center" Margin="5"/>
                            <ComboBox ItemsSource="{Binding RobotTypes}" Width="100" Margin="5" SelectedItem="{Binding SeletedRobotType}"/>
                        </StackPanel>
                        <Border BorderThickness="1" Margin="2" BorderBrush="Black">
                            <StackPanel>
                                <TextBlock Text="Type numbers" Margin="5"/>
                                <DataGrid Grid.Column="1" Grid.Row="0" MinWidth="300" ItemsSource="{Binding SelectedProject.TypNumbers.TypNumber}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedTypNr, Mode=TwoWay}"
                                    CanUserAddRows="False" CanUserDeleteRows="False"                 
                                    SelectionMode="Single" SelectionUnit="FullRow">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Header="Number">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <ComboBox ItemsSource="{Binding RelativeSource={RelativeSource Findancestor, AncestorType={x:Type Window}}, Path=DataContext.TypNumbersList}"
                                                          SelectedItem="{Binding Number, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                          MinWidth="20"
                                                          IsEnabled="{Binding Editable}"
                                                          >
                                                        <ComboBox.Style>
                                                            <Style TargetType="ComboBox">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=Editable}" Value="True">
                                                                        <Setter Property="Foreground" Value="Black"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Editable}" Value="False">
                                                                        <Setter Property="Foreground" Value="Gray"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ComboBox.Style>
                                                    </ComboBox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>

                                        <DataGridTemplateColumn Header="Name" Width="*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Name, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=Editable}" Value="True">
                                                                        <Setter Property="Foreground" Value="Black"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=Editable}" Value="False">
                                                                        <Setter Property="Foreground" Value="Gray"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                            <DataGridTemplateColumn.CellEditingTemplate>
                                                <DataTemplate>
                                                    <TextBox IsEnabled="{Binding Path=Editable}" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellEditingTemplate>
                                        </DataGridTemplateColumn>

                                    </DataGrid.Columns>
                                </DataGrid>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding TypeOptionsVisible, Converter={StaticResource boolToVisibilityConverter}}">
                                    <Button Content="Add Type" Command="{Binding AddTypeCommand}" Width="100" Margin="5"/>
                                    <Button Content="Delete Type" Command="{Binding DeleteTypeCommand}" Width="100" Margin="5"/>
                                    <Button Content="Edit Type" Command="{Binding EditTypeCommand}" Width="100" Margin="5"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Visibility="{Binding TypeEditButtonsVisible, Converter={StaticResource boolToVisibilityConverter}}">
                                    <Button Content="Edit ok" Command="{Binding EditOkTypeCommand}" Width="100" Margin="5"/>
                                    <Button Content="Cancel" Command="{Binding EditCancelTypeCommand}" Width="100" Margin="5"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Border BorderThickness="1" BorderBrush="Black" Margin="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="25"/>
                                    <RowDefinition Height="25"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Main TypID:" HorizontalAlignment="Right" Margin="2"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding MainTypID}" Margin="2" PreviewTextInput="NumberValidationTextBox"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Communal TypID:" HorizontalAlignment="Right" Margin="2"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding CommunalTypID}" Margin="2" PreviewTextInput="NumberValidationTextBox"/>
                            </Grid>
                        </Border>
                        <Border BorderThickness="1" BorderBrush="Black" Margin="2">
                            <StackPanel>
                                <TextBlock Text="Application type" Margin="2" HorizontalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="SpotWelding: " HorizontalAlignment="Left" Margin="2" Width="75"/>
                                    <CheckBox Content="A04" IsChecked="{Binding ApplicationTypes.SpotType.A04, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                    <CheckBox Content="A05" IsChecked="{Binding ApplicationTypes.SpotType.A05, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="Toolchanger: " HorizontalAlignment="Left" Margin="2" Width="75"/>
                                    <CheckBox Content="A02" IsChecked="{Binding ApplicationTypes.TchType.A02, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                    <CheckBox Content="B02" IsChecked="{Binding ApplicationTypes.TchType.B02, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="Gluing: " HorizontalAlignment="Left" Margin="2" Width="75"/>
                                    <CheckBox Content="A08" IsChecked="{Binding ApplicationTypes.GlueType.A08, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                    <CheckBox Content="B08" IsChecked="{Binding ApplicationTypes.GlueType.B08, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <TextBlock Text="Tacktile laser: " HorizontalAlignment="Left" Margin="2" Width="75"/>
                                    <CheckBox Content="A15" IsChecked="{Binding ApplicationTypes.LaserType.A15, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                    <CheckBox Content="B15" IsChecked="{Binding ApplicationTypes.LaserType.B15, Converter={StaticResource stringToBoolConverter}, Mode=TwoWay}" Margin="2"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <Border BorderThickness="1" BorderBrush="Black" Margin="2">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="Use description in CollZone?" HorizontalAlignment="Left" Margin="2" Width="150"/>
                                <RadioButton Content="Yes" IsChecked="{Binding UseDescrInCollZone, Mode=TwoWay}" GroupName="DescrInCollZone" Margin="2"/>
                                <RadioButton Content="No"  IsChecked="{Binding NotUseDescrInCollZone, Mode=TwoWay}" GroupName="DescrInCollZone" Margin="2"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </Border>
            </Border>
            <StackPanel Height="30" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                <Button Content="OK" DockPanel.Dock="Top" IsEnabled="{Binding EditProjectNameDisabled}"  VerticalAlignment="Bottom" Command="{Binding OKCommand}" CommandParameter="{Binding ElementName=MainProgramWindow}" Margin="5" Width="50"/>
                <Button Content="Cancel" Command="{Binding CancelCommand}" CommandParameter="{Binding ElementName=MainProgramWindow}" Margin="5" Width="50"/>
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>
