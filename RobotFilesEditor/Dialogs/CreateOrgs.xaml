<Window x:Class="RobotFilesEditor.Dialogs.CreateOrgs"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RobotFilesEditor.Dialogs"
        mc:Ignorable="d"
        Title="Create Organization Programs" SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" ResizeMode="NoResize">
    <Grid Margin="5,5,5,5" HorizontalAlignment="Center">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="110"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="160"/>
            <ColumnDefinition Width="160"/>
            <ColumnDefinition Width="260"/>
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Content="Select line first!" Foreground="Tomato" FontWeight="Bold" Margin="5.667,5,4.266,5.2" HorizontalAlignment="Center"/>
        <Label Grid.Row="1" Grid.Column="1" Content="Line" Margin="5.667,5,4.266,5.2" HorizontalAlignment="Center"/>
        <ComboBox Name="choseLine" ItemsSource="{Binding Lines}" SelectedItem="{Binding SelectedLine}"  Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="33.734,6,34,6.2"/>
        <Label Grid.Row="1" Grid.Column="3" Content="PLC nr" Margin="5.667,5,4.266,5.2" HorizontalAlignment="Center"/>
        <ComboBox Name="chosePLC" ItemsSource="{Binding PLCs}" SelectedItem="{Binding SelectedPLC, Mode=TwoWay}"  Grid.Row="1" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="33.734,6,34,6.2"/>
        <Label Grid.Row="2" Grid.Column="0" Content="Type number" Margin="5.667,5,4.266,5.2"/>
        <ComboBox Name="choseType" ItemsSource="{Binding Types}" SelectedItem="{Binding SelectedType, Mode=TwoWay}"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="24,6,24,6" Width="Auto"/>
        <Label Grid.Row="2" Grid.Column="2" Content="{Binding SelectedTypeName, Mode=TwoWay}" Margin="5.667,5,4.266,5.2"/>
        <Label Grid.Row="2" Grid.Column="3" Content="Robot:" HorizontalAlignment="Right" Margin="5.667,5,4.266,5.2"/>
        <TextBox Grid.Row="2" Grid.Column="4" Text="{Binding RobotName, Mode=TwoWay}" MinWidth="200" HorizontalAlignment="left" Margin="5.667,5,4.266,5.2"/>
        <Label Grid.Row="3" Grid.Column="0" Content="Number of tools" Margin="5.667,5,4.266,5.2"/>
        <ComboBox Name="choseNumberOfTools" ItemsSource="{Binding NrOfTools}" SelectedItem="{Binding SelectedToolsNumber}"  Grid.Row="3" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="24,6,24,6"/>
        <Label Grid.Row="3" Grid.Column="2" Content="Nr of weld guns:" Margin="5.667,5,4.266,5.2"/>
        <ComboBox Name="choseNumberOfGuns" ItemsSource="{Binding NrOfGuns}" SelectedItem="{Binding SelectedGunsNumber}" Grid.Row="3" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="33.734,6,25,6.2">
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Setter Property="IsEnabled" Value="{Binding MultiTools}" />
                </Style>
            </ComboBox.Style>
        </ComboBox>
        <Label Grid.Row="3" Grid.Column="3" Content="Start org num:" Margin="5.667,5,4.266,5.2"/>
        <ComboBox Name="orgNum" ItemsSource="{Binding Orgnumbers}" SelectedItem="{Binding SelectedStartOrgNum}" Grid.Row="3" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="33.734,6,25,6.2"/>
        <CheckBox Grid.Column="4" Grid.Row="3" Content="Safe Robot?" IsChecked="{Binding SafeRobot}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="5" HorizontalAlignment="Center">
            <CheckBox Content="PlcCheckHome?" IsChecked="{Binding PLCCheckHome}" IsEnabled="{Binding IsCheckHomeEnabled}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,20,0"/>
            <CheckBox Content="WAIT FOR $IN_HOME?" IsChecked="{Binding WaitForInHome}" IsEnabled="{Binding IsCheckHomeEnabled}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </StackPanel>
        <DataGrid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="9" Margin="5,5,0,5"
                  ItemsSource="{Binding Path=OrgsElements}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedOrgsElement}"
                  CanUserAddRows="True" CanUserDeleteRows="True"                 
                  SelectionMode="Single" SelectionUnit="FullRow">
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id"
                    MinWidth="20"
                    Binding="{Binding Path=Id}"  
                    IsReadOnly="True"                    
                >

                </DataGridTextColumn>
                <DataGridComboBoxColumn  Header="Path" MinWidth="150"
                    SelectedValueBinding="{Binding Path, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"      
                                SelectedValuePath="Key"
                                DisplayMemberPath="Key"
                                         >
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Paths}"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Paths}"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <DataGridTextColumn Header="JobAndDesc"
                    MinWidth="150"
                    Binding="{Binding Path=JobAndDescription}"
                     IsReadOnly="True" />

                <DataGridComboBoxColumn  Header="Abort" MinWidth="100"
                    SelectedValueBinding="{Binding Abort, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"      
                                SelectedValuePath="Text"
                                DisplayMemberPath="Text"
                                         >
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Abort}"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Abort}"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn  Header="AbortNo" MinWidth="100"
                    SelectedValueBinding="{Binding AbortNr, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"      
                                SelectedValuePath="Value"
                                DisplayMemberPath="Value"
                                         >
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding AbortNrs}"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding AbortNrs}"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn  Header="With Part" MinWidth="100"
                    SelectedValueBinding="{Binding WithPart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"      
                                SelectedValuePath="Text"
                                DisplayMemberPath="Text"
                                         >
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.WithParts}"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.WithParts}"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>

                <DataGridComboBoxColumn  Header="Home to central" MinWidth="150"
                    SelectedValueBinding="{Binding HomeToCentralPath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"      
                                SelectedValuePath="Text"
                                DisplayMemberPath="Text"
                                         >
                    <DataGridComboBoxColumn.ElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding HomeToCentral}"/>
                        </Style>
                    </DataGridComboBoxColumn.ElementStyle>
                    <DataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox">
                            <Setter Property="ItemsSource" Value="{Binding HomeToCentral}"/>
                        </Style>
                    </DataGridComboBoxColumn.EditingElementStyle>
                </DataGridComboBoxColumn>
                <!--<DataGridTemplateColumn Header="Remove">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="x" Command="{Binding Mode=OneWay}">
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    
                </DataGridTemplateColumn>-->
            </DataGrid.Columns>
        </DataGrid>
        <Button Grid.Column="2" Grid.Row="6" Margin="5,5,5.133,5.2" Content="Ok" Command="{Binding ClosingCommand}" IsEnabled="{Binding EnableOK}" Width="130"/>
        <Button Grid.Column="3" Grid.Row="6" Margin="5,5,5.133,5.2" Content="Cancel" Command="{Binding CancelCommand}" Width="130"/>
        <StackPanel>
            
        </StackPanel>
    </Grid>
    
        
    
</Window>
